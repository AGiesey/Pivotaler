// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(PostgressDbContext))]
    [Migration("20200223165511_add-iterations")]
    partial class additerations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Data.Entities.Identity.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Entities.Iteration.Iteration", b =>
                {
                    b.Property<int>("IterationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InitialPoints")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("IterationId");

                    b.ToTable("Iterations");
                });

            modelBuilder.Entity("Data.Entities.Iteration.IterationDataPoint", b =>
                {
                    b.Property<int>("IterationDataPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IterationId")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingPoints")
                        .HasColumnType("integer");

                    b.HasKey("IterationDataPointId");

                    b.HasIndex("IterationId");

                    b.ToTable("IterationDataPoints");
                });

            modelBuilder.Entity("Data.Entities.Pivotal.PivotalUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("PivotalApiKey")
                        .HasColumnType("text");

                    b.Property<int?>("PivotalUserId")
                        .HasColumnType("integer");

                    b.Property<string>("PivotalUserInitials")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("PivotalUsers");
                });

            modelBuilder.Entity("Data.Entities.Iteration.IterationDataPoint", b =>
                {
                    b.HasOne("Data.Entities.Iteration.Iteration", "Iteration")
                        .WithMany("DataPoints")
                        .HasForeignKey("IterationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Pivotal.PivotalUser", b =>
                {
                    b.HasOne("Data.Entities.Identity.User", "User")
                        .WithOne("PivotalUser")
                        .HasForeignKey("Data.Entities.Pivotal.PivotalUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
